module(
    name = "bazel_grpc_pbuf_go",
    version = "2.0.0"
)

bazel_dep(name = "buildifier_prebuilt", version = "6.3.3", dev_dependency = True)
bazel_dep(name = "gazelle", version = "0.34.0") #, repo_name = "bazel_gazelle"
bazel_dep(name = "grpc", version = "1.48.1")
bazel_dep(name = "protobuf", version = "21.7", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_go", version = "0.42.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture.
go_sdk.download(
    version = "1.21.3",
#    goarch = "amd64",
#    goos = "darwin",
)

# Register the go.mod file with the go_deps extension.
go_deps = use_extension("//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# All *direct* Go dependencies of the module have to be listed explicitly.
use_repo(
    go_deps,
#    org_golang_x_net,
#    org_golang_x_sys,
#    org_golang_x_text,
#    org_google_golang_genproto,
#    org_google_golang_genproto_googleapis_api,
#    org_google_golang_genproto_googleapis_rpc,
#    org_google_golang_grpc,
#    org_google_golang_protobuf
)

# Register the Go SDK installed on the host.
go_sdk.host()